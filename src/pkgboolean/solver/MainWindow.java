/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkgboolean.solver;

import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Edilson
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        this.tfFunction.requestFocus();
        this.setLocationRelativeTo(null);
        this.cleanComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgFunctionVariables = new javax.swing.ButtonGroup();
        bgTableVariables = new javax.swing.ButtonGroup();
        bgKMapVariables = new javax.swing.ButtonGroup();
        bgTermsKMap = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tfFunction = new javax.swing.JTextField();
        btnClearFunction = new javax.swing.JButton();
        btnGenerateFromFunction = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        rbtnTwoVariablesFunction = new javax.swing.JRadioButton();
        rbtnThreeVariablesFunction = new javax.swing.JRadioButton();
        rbtnFourVariablesFunction = new javax.swing.JRadioButton();
        rbtnFiveVariablesFunction = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableTruthTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        rbtnTwoVariablesTable = new javax.swing.JRadioButton();
        rbtnThreeVariablesTable = new javax.swing.JRadioButton();
        rbtnFourVariablesTable = new javax.swing.JRadioButton();
        rbtnFiveVariablesTable = new javax.swing.JRadioButton();
        btnGenerateTable = new javax.swing.JButton();
        btnClearTable = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableKMap2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableKMap1 = new javax.swing.JTable();
        tfSimplifiedFunction = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        rbtnFiveVariablesKMap = new javax.swing.JRadioButton();
        rbtnFourVariablesKMap = new javax.swing.JRadioButton();
        rbtnThreeVariablesKMap = new javax.swing.JRadioButton();
        rbtnTwoVariablesKMap = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        btnClearKMap = new javax.swing.JButton();
        btnGenerateKMap = new javax.swing.JButton();
        rbtnMinTerms = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        rbtnMaxTerms = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DLD Project");
        setMinimumSize(new java.awt.Dimension(700, 480));
        setPreferredSize(new java.awt.Dimension(700, 425));
        setResizable(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Please enter a function");

        btnClearFunction.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnClearFunction.setText("Clear");
        btnClearFunction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearFunctionActionPerformed(evt);
            }
        });

        btnGenerateFromFunction.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnGenerateFromFunction.setText("Generate");
        btnGenerateFromFunction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateFromFunctionActionPerformed(evt);
            }
        });

        jLabel1.setText("Variables:");

        bgFunctionVariables.add(rbtnTwoVariablesFunction);
        rbtnTwoVariablesFunction.setText("2");

        bgFunctionVariables.add(rbtnThreeVariablesFunction);
        rbtnThreeVariablesFunction.setSelected(true);
        rbtnThreeVariablesFunction.setText("3");

        bgFunctionVariables.add(rbtnFourVariablesFunction);
        rbtnFourVariablesFunction.setText("4");

        bgFunctionVariables.add(rbtnFiveVariablesFunction);
        rbtnFiveVariablesFunction.setText("5");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnClearFunction, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGenerateFromFunction, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbtnTwoVariablesFunction)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbtnThreeVariablesFunction)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbtnFourVariablesFunction)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbtnFiveVariablesFunction))
                            .addComponent(tfFunction, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addComponent(jLabel2)))
                .addContainerGap(127, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(tfFunction, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(rbtnTwoVariablesFunction)
                    .addComponent(rbtnThreeVariablesFunction)
                    .addComponent(rbtnFourVariablesFunction)
                    .addComponent(rbtnFiveVariablesFunction))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 157, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnGenerateFromFunction, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addComponent(btnClearFunction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Function", jPanel1);

        tableTruthTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tableTruthTable);

        jLabel3.setText("Variables:");

        bgTableVariables.add(rbtnTwoVariablesTable);
        rbtnTwoVariablesTable.setText("2");
        rbtnTwoVariablesTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnTwoVariablesTableActionPerformed(evt);
            }
        });

        bgTableVariables.add(rbtnThreeVariablesTable);
        rbtnThreeVariablesTable.setSelected(true);
        rbtnThreeVariablesTable.setText("3");
        rbtnThreeVariablesTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnThreeVariablesTableActionPerformed(evt);
            }
        });

        bgTableVariables.add(rbtnFourVariablesTable);
        rbtnFourVariablesTable.setText("4");
        rbtnFourVariablesTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnFourVariablesTableActionPerformed(evt);
            }
        });

        bgTableVariables.add(rbtnFiveVariablesTable);
        rbtnFiveVariablesTable.setText("5");
        rbtnFiveVariablesTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnFiveVariablesTableActionPerformed(evt);
            }
        });

        btnGenerateTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnGenerateTable.setText("Generate");
        btnGenerateTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateTableActionPerformed(evt);
            }
        });

        btnClearTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnClearTable.setText("Clear");
        btnClearTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearTableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 645, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(rbtnTwoVariablesTable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbtnThreeVariablesTable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbtnFourVariablesTable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbtnFiveVariablesTable)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnClearTable, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnGenerateTable, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(rbtnTwoVariablesTable)
                    .addComponent(rbtnThreeVariablesTable)
                    .addComponent(rbtnFourVariablesTable)
                    .addComponent(rbtnFiveVariablesTable))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGenerateTable, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClearTable, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Truth Table", jPanel2);

        tableKMap2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tableKMap2);

        tableKMap1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(tableKMap1);

        tfSimplifiedFunction.setEditable(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Simplified function");

        bgKMapVariables.add(rbtnFiveVariablesKMap);
        rbtnFiveVariablesKMap.setText("5");
        rbtnFiveVariablesKMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnFiveVariablesKMapActionPerformed(evt);
            }
        });

        bgKMapVariables.add(rbtnFourVariablesKMap);
        rbtnFourVariablesKMap.setText("4");
        rbtnFourVariablesKMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnFourVariablesKMapActionPerformed(evt);
            }
        });

        bgKMapVariables.add(rbtnThreeVariablesKMap);
        rbtnThreeVariablesKMap.setSelected(true);
        rbtnThreeVariablesKMap.setText("3");
        rbtnThreeVariablesKMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnThreeVariablesKMapActionPerformed(evt);
            }
        });

        bgKMapVariables.add(rbtnTwoVariablesKMap);
        rbtnTwoVariablesKMap.setText("2");
        rbtnTwoVariablesKMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnTwoVariablesKMapActionPerformed(evt);
            }
        });

        jLabel5.setText("Variables:");

        btnClearKMap.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnClearKMap.setText("Clear");
        btnClearKMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearKMapActionPerformed(evt);
            }
        });

        btnGenerateKMap.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnGenerateKMap.setText("Generate");
        btnGenerateKMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateKMapActionPerformed(evt);
            }
        });

        bgTermsKMap.add(rbtnMinTerms);
        rbtnMinTerms.setSelected(true);
        rbtnMinTerms.setText("Min Terms");

        jLabel6.setText("Format");

        bgTermsKMap.add(rbtnMaxTerms);
        rbtnMaxTerms.setText("Max Terms");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(184, 184, 184)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfSimplifiedFunction, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(rbtnTwoVariablesKMap)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbtnThreeVariablesKMap)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbtnFourVariablesKMap)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbtnFiveVariablesKMap)
                                .addGap(139, 139, 139)
                                .addComponent(rbtnMinTerms)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbtnMaxTerms)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnClearKMap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnGenerateKMap, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(rbtnTwoVariablesKMap)
                        .addComponent(rbtnThreeVariablesKMap)
                        .addComponent(rbtnFourVariablesKMap)
                        .addComponent(rbtnFiveVariablesKMap)
                        .addComponent(rbtnMinTerms)
                        .addComponent(jLabel6)
                        .addComponent(rbtnMaxTerms))
                    .addComponent(btnClearKMap, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfSimplifiedFunction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addComponent(btnGenerateKMap, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Karnaugh map", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearFunctionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearFunctionActionPerformed
        this.cleanComponents();
    }//GEN-LAST:event_btnClearFunctionActionPerformed

    private void btnGenerateFromFunctionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateFromFunctionActionPerformed
        try {
            Function function = null;
            if (this.rbtnTwoVariablesFunction.isSelected()) {
                function = new Function(this.tfFunction.getText(), 2);
            } else if (this.rbtnThreeVariablesFunction.isSelected()) {
                function = new Function(this.tfFunction.getText(), 3);
            } else if (this.rbtnFourVariablesFunction.isSelected()) {
                function = new Function(this.tfFunction.getText(), 4);
            } else if (this.rbtnFiveVariablesFunction.isSelected()) {
                function = new Function(this.tfFunction.getText(), 5);
            }

            TruthTable truthTable = new TruthTable(function);
            int[] tableFunction = truthTable.getTableFunction();
            this.generateTruthTableModel(function.getVariables());
            DefaultTableModel tableModel = (DefaultTableModel) this.tableTruthTable.getModel();

            for (int i = 0; i < tableFunction.length; i++) {
                if (tableFunction[i] != 2) {
                    tableModel.setValueAt(tableFunction[i], i, tableModel.getColumnCount() - 1);
                } else {
                    tableModel.setValueAt("x", i, tableModel.getColumnCount() - 1);
                }
            }

            if (rbtnTwoVariablesTable.isSelected()) {
                rbtnTwoVariablesKMap.setSelected(false);
            } else if (rbtnThreeVariablesTable.isSelected()) {
                rbtnThreeVariablesKMap.setSelected(true);
            } else if (rbtnFourVariablesTable.isSelected()) {
                rbtnFourVariablesKMap.setSelected(true);
            } else {
                rbtnFiveVariablesKMap.setSelected(true);
            }

            generateKMap();

            MapK mapk = new MapK((truthTable));
            
            int[] func = truthTable.getTableFunction();
            ArrayList<String> functionValues = new ArrayList();
            
            for (int i = 0; i < func.length; i++) {
                if (func[i] == 2) {
                    functionValues.add("x");
                } else {
                    functionValues.add(Integer.toString(func[i]));
                }
                
            }
            

            if (rbtnTwoVariablesKMap.isSelected()) {
                this.tableKMap1.setValueAt(functionValues.get(0), 0, 0);
                this.tableKMap1.setValueAt(functionValues.get(1), 0, 1);
                this.tableKMap1.setValueAt(functionValues.get(2), 1, 0);
                this.tableKMap1.setValueAt(functionValues.get(3), 1, 1);
            } else if (rbtnThreeVariablesKMap.isSelected()) {
                this.tableKMap1.setValueAt(functionValues.get(0), 0, 0);
                this.tableKMap1.setValueAt(functionValues.get(1), 0, 1);
                this.tableKMap1.setValueAt(functionValues.get(2), 0, 3);
                this.tableKMap1.setValueAt(functionValues.get(3), 0, 2);
                this.tableKMap1.setValueAt(functionValues.get(4), 1, 0);
                this.tableKMap1.setValueAt(functionValues.get(5), 1, 1);
                this.tableKMap1.setValueAt(functionValues.get(6), 1, 3);
                this.tableKMap1.setValueAt(functionValues.get(7), 1, 2);

            } else if (rbtnFourVariablesKMap.isSelected()) {
                this.tableKMap1.setValueAt(functionValues.get(0), 0, 0);
                this.tableKMap1.setValueAt(functionValues.get(1), 0, 1);
                this.tableKMap1.setValueAt(functionValues.get(2), 0, 3);
                this.tableKMap1.setValueAt(functionValues.get(3), 0, 2);
                this.tableKMap1.setValueAt(functionValues.get(4), 1, 0);
                this.tableKMap1.setValueAt(functionValues.get(5), 1, 1);
                this.tableKMap1.setValueAt(functionValues.get(6), 1, 3);
                this.tableKMap1.setValueAt(functionValues.get(7), 1, 2);
                this.tableKMap1.setValueAt(functionValues.get(8), 3, 0);
                this.tableKMap1.setValueAt(functionValues.get(9), 3, 1);
                this.tableKMap1.setValueAt(functionValues.get(10), 3, 3);
                this.tableKMap1.setValueAt(functionValues.get(11), 3, 2);
                this.tableKMap1.setValueAt(functionValues.get(12), 2, 0);
                this.tableKMap1.setValueAt(functionValues.get(13), 2, 1);
                this.tableKMap1.setValueAt(functionValues.get(14), 2, 3);
                this.tableKMap1.setValueAt(functionValues.get(15), 2, 2);
            } else {
                this.tableKMap1.setValueAt(functionValues.get(0), 0, 0);
                this.tableKMap1.setValueAt(functionValues.get(1), 0, 1);
                this.tableKMap1.setValueAt(functionValues.get(2), 0, 3);
                this.tableKMap1.setValueAt(functionValues.get(3), 0, 2);
                this.tableKMap1.setValueAt(functionValues.get(4), 1, 0);
                this.tableKMap1.setValueAt(functionValues.get(5), 1, 1);
                this.tableKMap1.setValueAt(functionValues.get(6), 1, 3);
                this.tableKMap1.setValueAt(functionValues.get(7), 1, 2);
                this.tableKMap1.setValueAt(functionValues.get(8), 3, 0);
                this.tableKMap1.setValueAt(functionValues.get(9), 3, 1);
                this.tableKMap1.setValueAt(functionValues.get(10), 3, 3);
                this.tableKMap1.setValueAt(functionValues.get(11), 3, 2);
                this.tableKMap1.setValueAt(functionValues.get(12), 2, 0);
                this.tableKMap1.setValueAt(functionValues.get(13), 2, 1);
                this.tableKMap1.setValueAt(functionValues.get(14), 2, 3);
                this.tableKMap1.setValueAt(functionValues.get(15), 2, 2);

                this.tableKMap2.setValueAt(functionValues.get(16), 0, 0);
                this.tableKMap2.setValueAt(functionValues.get(17), 0, 1);
                this.tableKMap2.setValueAt(functionValues.get(18), 0, 3);
                this.tableKMap2.setValueAt(functionValues.get(19), 0, 2);
                this.tableKMap2.setValueAt(functionValues.get(20), 1, 0);
                this.tableKMap2.setValueAt(functionValues.get(21), 1, 1);
                this.tableKMap2.setValueAt(functionValues.get(22), 1, 3);
                this.tableKMap2.setValueAt(functionValues.get(23), 1, 2);
                this.tableKMap2.setValueAt(functionValues.get(24), 3, 0);
                this.tableKMap2.setValueAt(functionValues.get(25), 3, 1);
                this.tableKMap2.setValueAt(functionValues.get(26), 3, 3);
                this.tableKMap2.setValueAt(functionValues.get(27), 3, 2);
                this.tableKMap2.setValueAt(functionValues.get(28), 2, 0);
                this.tableKMap2.setValueAt(functionValues.get(29), 2, 1);
                this.tableKMap2.setValueAt(functionValues.get(30), 2, 3);
                this.tableKMap2.setValueAt(functionValues.get(31), 2, 2);
            }

            if (rbtnMinTerms.isSelected()) {
                this.tfSimplifiedFunction.setText(mapk.simplifyaFunctionMinTerms(true));
            } else {
                this.tfSimplifiedFunction.setText(mapk.simplifyaFunctionMinTerms(false));
            }
            
            JOptionPane.showMessageDialog(this, "Finish!", "Message", JOptionPane.INFORMATION_MESSAGE);
        } catch (InvalidDataException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGenerateFromFunctionActionPerformed

    private void btnClearTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearTableActionPerformed
        this.cleanComponents();
    }//GEN-LAST:event_btnClearTableActionPerformed

    private void rbtnTwoVariablesTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnTwoVariablesTableActionPerformed
        this.generateTruthTableModel(null);
    }//GEN-LAST:event_rbtnTwoVariablesTableActionPerformed

    private void rbtnThreeVariablesTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnThreeVariablesTableActionPerformed
        this.generateTruthTableModel(null);
    }//GEN-LAST:event_rbtnThreeVariablesTableActionPerformed

    private void rbtnFourVariablesTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnFourVariablesTableActionPerformed
        this.generateTruthTableModel(null);
    }//GEN-LAST:event_rbtnFourVariablesTableActionPerformed

    private void rbtnFiveVariablesTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnFiveVariablesTableActionPerformed
        this.generateTruthTableModel(null);
    }//GEN-LAST:event_rbtnFiveVariablesTableActionPerformed

    private void btnGenerateTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateTableActionPerformed
        try {
            ArrayList<String> functionValues = new ArrayList();
            int columns = this.tableTruthTable.getColumnCount() - 1;

            for (int i = 0; i < this.tableTruthTable.getRowCount(); i++) {
                if (this.tableTruthTable.getValueAt(i, columns) == null) {
                    throw new InvalidDataException("Please press enter in the table before generate the function");
                }

                functionValues.add(this.tableTruthTable.getValueAt(i, columns).toString());
            }

            TruthTable truthTable = new TruthTable(functionValues);

            if (rbtnTwoVariablesTable.isSelected()) {
                rbtnTwoVariablesKMap.setSelected(false);
            } else if (rbtnThreeVariablesTable.isSelected()) {
                rbtnThreeVariablesKMap.setSelected(true);
            } else if (rbtnFourVariablesTable.isSelected()) {
                rbtnFourVariablesKMap.setSelected(true);
            } else {
                rbtnFiveVariablesKMap.setSelected(true);
            }

            generateKMap();

            if (rbtnTwoVariablesKMap.isSelected()) {
                this.tableKMap1.setValueAt(functionValues.get(0), 0, 0);
                this.tableKMap1.setValueAt(functionValues.get(1), 0, 1);
                this.tableKMap1.setValueAt(functionValues.get(2), 1, 0);
                this.tableKMap1.setValueAt(functionValues.get(3), 1, 1);
            } else if (rbtnThreeVariablesKMap.isSelected()) {
                this.tableKMap1.setValueAt(functionValues.get(0), 0, 0);
                this.tableKMap1.setValueAt(functionValues.get(1), 0, 1);
                this.tableKMap1.setValueAt(functionValues.get(2), 0, 3);
                this.tableKMap1.setValueAt(functionValues.get(3), 0, 2);
                this.tableKMap1.setValueAt(functionValues.get(4), 1, 0);
                this.tableKMap1.setValueAt(functionValues.get(5), 1, 1);
                this.tableKMap1.setValueAt(functionValues.get(6), 1, 3);
                this.tableKMap1.setValueAt(functionValues.get(7), 1, 2);

            } else if (rbtnFourVariablesKMap.isSelected()) {
                this.tableKMap1.setValueAt(functionValues.get(0), 0, 0);
                this.tableKMap1.setValueAt(functionValues.get(1), 0, 1);
                this.tableKMap1.setValueAt(functionValues.get(2), 0, 3);
                this.tableKMap1.setValueAt(functionValues.get(3), 0, 2);
                this.tableKMap1.setValueAt(functionValues.get(4), 1, 0);
                this.tableKMap1.setValueAt(functionValues.get(5), 1, 1);
                this.tableKMap1.setValueAt(functionValues.get(6), 1, 3);
                this.tableKMap1.setValueAt(functionValues.get(7), 1, 2);
                this.tableKMap1.setValueAt(functionValues.get(8), 3, 0);
                this.tableKMap1.setValueAt(functionValues.get(9), 3, 1);
                this.tableKMap1.setValueAt(functionValues.get(10), 3, 3);
                this.tableKMap1.setValueAt(functionValues.get(11), 3, 2);
                this.tableKMap1.setValueAt(functionValues.get(12), 2, 0);
                this.tableKMap1.setValueAt(functionValues.get(13), 2, 1);
                this.tableKMap1.setValueAt(functionValues.get(14), 2, 3);
                this.tableKMap1.setValueAt(functionValues.get(15), 2, 2);
            } else {
                this.tableKMap1.setValueAt(functionValues.get(0), 0, 0);
                this.tableKMap1.setValueAt(functionValues.get(1), 0, 1);
                this.tableKMap1.setValueAt(functionValues.get(2), 0, 3);
                this.tableKMap1.setValueAt(functionValues.get(3), 0, 2);
                this.tableKMap1.setValueAt(functionValues.get(4), 1, 0);
                this.tableKMap1.setValueAt(functionValues.get(5), 1, 1);
                this.tableKMap1.setValueAt(functionValues.get(6), 1, 3);
                this.tableKMap1.setValueAt(functionValues.get(7), 1, 2);
                this.tableKMap1.setValueAt(functionValues.get(8), 3, 0);
                this.tableKMap1.setValueAt(functionValues.get(9), 3, 1);
                this.tableKMap1.setValueAt(functionValues.get(10), 3, 3);
                this.tableKMap1.setValueAt(functionValues.get(11), 3, 2);
                this.tableKMap1.setValueAt(functionValues.get(12), 2, 0);
                this.tableKMap1.setValueAt(functionValues.get(13), 2, 1);
                this.tableKMap1.setValueAt(functionValues.get(14), 2, 3);
                this.tableKMap1.setValueAt(functionValues.get(15), 2, 2);

                this.tableKMap2.setValueAt(functionValues.get(16), 0, 0);
                this.tableKMap2.setValueAt(functionValues.get(17), 0, 1);
                this.tableKMap2.setValueAt(functionValues.get(18), 0, 3);
                this.tableKMap2.setValueAt(functionValues.get(19), 0, 2);
                this.tableKMap2.setValueAt(functionValues.get(20), 1, 0);
                this.tableKMap2.setValueAt(functionValues.get(21), 1, 1);
                this.tableKMap2.setValueAt(functionValues.get(22), 1, 3);
                this.tableKMap2.setValueAt(functionValues.get(23), 1, 2);
                this.tableKMap2.setValueAt(functionValues.get(24), 3, 0);
                this.tableKMap2.setValueAt(functionValues.get(25), 3, 1);
                this.tableKMap2.setValueAt(functionValues.get(26), 3, 3);
                this.tableKMap2.setValueAt(functionValues.get(27), 3, 2);
                this.tableKMap2.setValueAt(functionValues.get(28), 2, 0);
                this.tableKMap2.setValueAt(functionValues.get(29), 2, 1);
                this.tableKMap2.setValueAt(functionValues.get(30), 2, 3);
                this.tableKMap2.setValueAt(functionValues.get(31), 2, 2);
            }

            MapK mapk = new MapK((truthTable));

            if (rbtnMinTerms.isSelected()) {
                this.tfSimplifiedFunction.setText(mapk.simplifyaFunctionMinTerms(true));
            } else {
                this.tfSimplifiedFunction.setText(mapk.simplifyaFunctionMinTerms(false));
            }
            JOptionPane.showMessageDialog(this, "Finish!", "Message", JOptionPane.INFORMATION_MESSAGE);
        } catch (InvalidDataException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGenerateTableActionPerformed

    private void rbtnFiveVariablesKMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnFiveVariablesKMapActionPerformed
        this.tableKMap2.setEnabled(true);
        this.generateKMap();
    }//GEN-LAST:event_rbtnFiveVariablesKMapActionPerformed

    private void rbtnFourVariablesKMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnFourVariablesKMapActionPerformed
        this.tableKMap2.setEnabled(false);
        this.generateKMap();
    }//GEN-LAST:event_rbtnFourVariablesKMapActionPerformed

    private void rbtnThreeVariablesKMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnThreeVariablesKMapActionPerformed
        this.tableKMap2.setEnabled(false);
        this.generateKMap();
    }//GEN-LAST:event_rbtnThreeVariablesKMapActionPerformed

    private void rbtnTwoVariablesKMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnTwoVariablesKMapActionPerformed
        this.tableKMap2.setEnabled(false);
        this.generateKMap();
    }//GEN-LAST:event_rbtnTwoVariablesKMapActionPerformed

    private void btnClearKMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearKMapActionPerformed
        this.cleanComponents();
    }//GEN-LAST:event_btnClearKMapActionPerformed

    private void btnGenerateKMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateKMapActionPerformed
        try {
            TruthTable truthTable = null;

            if (rbtnTwoVariablesKMap.isSelected()) {
                ArrayList<String> functionValues = new ArrayList();
                functionValues.add(this.tableKMap1.getValueAt(0, 0).toString());
                functionValues.add(this.tableKMap1.getValueAt(0, 1).toString());
                functionValues.add(this.tableKMap1.getValueAt(1, 0).toString());
                functionValues.add(this.tableKMap1.getValueAt(1, 1).toString());
                truthTable = new TruthTable(functionValues);
            } else if (rbtnThreeVariablesKMap.isSelected()) {
                ArrayList<String> functionValues = new ArrayList();
                functionValues.add(this.tableKMap1.getValueAt(0, 0).toString());
                functionValues.add(this.tableKMap1.getValueAt(0, 1).toString());
                functionValues.add(this.tableKMap1.getValueAt(0, 3).toString());
                functionValues.add(this.tableKMap1.getValueAt(0, 2).toString());
                functionValues.add(this.tableKMap1.getValueAt(1, 0).toString());
                functionValues.add(this.tableKMap1.getValueAt(1, 1).toString());
                functionValues.add(this.tableKMap1.getValueAt(1, 3).toString());
                functionValues.add(this.tableKMap1.getValueAt(1, 2).toString());
                truthTable = new TruthTable(functionValues);
            } else if (rbtnFourVariablesKMap.isSelected()) {
                ArrayList<String> functionValues = new ArrayList();
                functionValues.add(this.tableKMap1.getValueAt(0, 0).toString());
                functionValues.add(this.tableKMap1.getValueAt(0, 1).toString());
                functionValues.add(this.tableKMap1.getValueAt(0, 3).toString());
                functionValues.add(this.tableKMap1.getValueAt(0, 2).toString());
                functionValues.add(this.tableKMap1.getValueAt(1, 0).toString());
                functionValues.add(this.tableKMap1.getValueAt(1, 1).toString());
                functionValues.add(this.tableKMap1.getValueAt(1, 3).toString());
                functionValues.add(this.tableKMap1.getValueAt(1, 2).toString());
                functionValues.add(this.tableKMap1.getValueAt(1, 2).toString());
                functionValues.add(this.tableKMap1.getValueAt(3, 0).toString());
                functionValues.add(this.tableKMap1.getValueAt(3, 1).toString());
                functionValues.add(this.tableKMap1.getValueAt(3, 3).toString());
                functionValues.add(this.tableKMap1.getValueAt(3, 2).toString());
                functionValues.add(this.tableKMap1.getValueAt(2, 0).toString());
                functionValues.add(this.tableKMap1.getValueAt(2, 1).toString());
                functionValues.add(this.tableKMap1.getValueAt(2, 3).toString());
                functionValues.add(this.tableKMap1.getValueAt(2, 2).toString());
                truthTable = new TruthTable(functionValues);
            } else {
                ArrayList<String> functionValues = new ArrayList();
                functionValues.add(this.tableKMap1.getValueAt(0, 0).toString());
                functionValues.add(this.tableKMap1.getValueAt(0, 1).toString());
                functionValues.add(this.tableKMap1.getValueAt(0, 3).toString());
                functionValues.add(this.tableKMap1.getValueAt(0, 2).toString());
                functionValues.add(this.tableKMap1.getValueAt(1, 0).toString());
                functionValues.add(this.tableKMap1.getValueAt(1, 1).toString());
                functionValues.add(this.tableKMap1.getValueAt(1, 3).toString());
                functionValues.add(this.tableKMap1.getValueAt(1, 2).toString());
                functionValues.add(this.tableKMap1.getValueAt(1, 2).toString());
                functionValues.add(this.tableKMap1.getValueAt(3, 0).toString());
                functionValues.add(this.tableKMap1.getValueAt(3, 1).toString());
                functionValues.add(this.tableKMap1.getValueAt(3, 3).toString());
                functionValues.add(this.tableKMap1.getValueAt(3, 2).toString());
                functionValues.add(this.tableKMap1.getValueAt(2, 0).toString());
                functionValues.add(this.tableKMap1.getValueAt(2, 1).toString());
                functionValues.add(this.tableKMap1.getValueAt(2, 3).toString());
                functionValues.add(this.tableKMap1.getValueAt(2, 2).toString());

                functionValues.add(this.tableKMap2.getValueAt(0, 0).toString());
                functionValues.add(this.tableKMap2.getValueAt(0, 1).toString());
                functionValues.add(this.tableKMap2.getValueAt(0, 3).toString());
                functionValues.add(this.tableKMap2.getValueAt(0, 2).toString());
                functionValues.add(this.tableKMap2.getValueAt(1, 0).toString());
                functionValues.add(this.tableKMap2.getValueAt(1, 1).toString());
                functionValues.add(this.tableKMap2.getValueAt(1, 3).toString());
                functionValues.add(this.tableKMap2.getValueAt(1, 2).toString());
                functionValues.add(this.tableKMap2.getValueAt(1, 2).toString());
                functionValues.add(this.tableKMap2.getValueAt(3, 0).toString());
                functionValues.add(this.tableKMap2.getValueAt(3, 1).toString());
                functionValues.add(this.tableKMap2.getValueAt(3, 3).toString());
                functionValues.add(this.tableKMap2.getValueAt(3, 2).toString());
                functionValues.add(this.tableKMap2.getValueAt(2, 0).toString());
                functionValues.add(this.tableKMap2.getValueAt(2, 1).toString());
                functionValues.add(this.tableKMap2.getValueAt(2, 3).toString());
                functionValues.add(this.tableKMap2.getValueAt(2, 2).toString());

                truthTable = new TruthTable(functionValues);
            }

            int[] tableFunction = truthTable.getTableFunction();

            if (rbtnTwoVariablesKMap.isSelected()) {
                rbtnTwoVariablesTable.setSelected(true);
            } else if (rbtnThreeVariablesKMap.isSelected()) {
                rbtnThreeVariablesTable.setSelected(true);
            } else if (rbtnFourVariablesKMap.isSelected()) {
                rbtnFourVariablesTable.setSelected(true);
            } else {
                rbtnFiveVariablesKMap.setSelected(true);
            }
            this.generateTruthTableModel(null);
            DefaultTableModel tableModel = (DefaultTableModel) this.tableTruthTable.getModel();

            for (int i = 0; i < tableFunction.length; i++) {
                if (tableFunction[i] != 2) {
                    tableModel.setValueAt(tableFunction[i], i, tableModel.getColumnCount() - 1);
                } else {
                    tableModel.setValueAt("x", i, tableModel.getColumnCount() - 1);
                }
            }
            this.tableTruthTable.setModel(tableModel);

            MapK mapk = new MapK(truthTable);
            if (this.rbtnMinTerms.isSelected()) {
                this.tfSimplifiedFunction.setText(mapk.simplifyaFunctionMinTerms(true));
            } else {
                this.tfSimplifiedFunction.setText(mapk.simplifyaFunctionMinTerms(false));
            }
            JOptionPane.showMessageDialog(this, "Finish!", "Message", JOptionPane.INFORMATION_MESSAGE);
        } catch (InvalidDataException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGenerateKMapActionPerformed

    /* Funciones del programa */
    private void cleanComponents() {
        this.tfFunction.setText("");
        this.rbtnThreeVariablesFunction.setSelected(true);
        this.generateTruthTableModel(null);
        this.generateKMap();
    }

    private void generateTruthTableModel(ArrayList<Variable> variables) {
        Vector<String> columnTitles = new Vector();
        int iterations;

        if (variables != null) {
            if (variables.size() == 2) {
                rbtnTwoVariablesTable.setSelected(true);
            } else if (variables.size() == 3) {
                rbtnThreeVariablesTable.setSelected(true);
            } else if (variables.size() == 4) {
                rbtnFourVariablesTable.setSelected(true);
            } else {
                rbtnFiveVariablesTable.setSelected(true);
            }
        }

        if (this.rbtnTwoVariablesTable.isSelected()) {
            iterations = 2;
        } else if (this.rbtnThreeVariablesTable.isSelected()) {
            iterations = 3;
        } else if (this.rbtnFourVariablesTable.isSelected()) {
            iterations = 4;
        } else {
            iterations = 5;
        }

        if (variables == null) {
            int letter = 65;
            for (int i = 0; i < iterations; i++) {
                columnTitles.add(Character.toString((char) letter));
                letter++;
            }
        } else {
            for (int i = 0; i < variables.size(); i++) {
                columnTitles.add(Character.toString(variables.get(i).getValue()));
            }
        }
        columnTitles.add("Function");

        DefaultTableModel neomodel = new DefaultTableModel(columnTitles, (int) Math.pow(2, iterations)) {

            @Override
            public boolean isCellEditable(int i, int i1) {
                return this.getColumnCount() - 1 == i1;
            }

        };
        int temp, k;
        for (int i = 0; i < (int) Math.pow(2, iterations); i++) {
            k = 0;
            for (int j = iterations - 1; j >= 0; j--) {

                temp = (int) ((i / (int) Math.pow(2, j)) % 2);
                neomodel.setValueAt(temp, i, k);
                ++k;
            }

        }
        this.tableTruthTable.setModel(neomodel);
    }

    public void generateKMap() {
        if (this.rbtnTwoVariablesKMap.isSelected()) {
            Vector<String> colnames = new Vector();
            for (int i = 0; i < 2; i++) {
                colnames.add("");
            }
            DefaultTableModel neoModel = new DefaultTableModel(colnames, 2);
            this.tableKMap1.setModel(neoModel);
            this.tableKMap2.setModel(new DefaultTableModel());
        } else if (rbtnThreeVariablesKMap.isSelected()) {
            Vector<String> colnames = new Vector();
            for (int i = 0; i < 4; i++) {
                colnames.add("");
            }
            DefaultTableModel neoModel = new DefaultTableModel(colnames, 2);
            this.tableKMap1.setModel(neoModel);
            this.tableKMap2.setModel(new DefaultTableModel());
        } else if (rbtnFourVariablesKMap.isSelected()) {
            Vector<String> colnames = new Vector();
            for (int i = 0; i < 4; i++) {
                colnames.add("");
            }
            DefaultTableModel neoModel = new DefaultTableModel(colnames, 4);
            this.tableKMap1.setModel(neoModel);
            this.tableKMap2.setModel(new DefaultTableModel());
        } else {
            Vector<String> colnames = new Vector();
            for (int i = 0; i < 4; i++) {
                colnames.add("");
            }
            DefaultTableModel neoModel = new DefaultTableModel(colnames, 4);
            DefaultTableModel neoModel2 = new DefaultTableModel(colnames, 4);
            this.tableKMap1.setModel(neoModel);
            this.tableKMap2.setModel(neoModel2);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgFunctionVariables;
    private javax.swing.ButtonGroup bgKMapVariables;
    private javax.swing.ButtonGroup bgTableVariables;
    private javax.swing.ButtonGroup bgTermsKMap;
    private javax.swing.JButton btnClearFunction;
    private javax.swing.JButton btnClearKMap;
    private javax.swing.JButton btnClearTable;
    private javax.swing.JButton btnGenerateFromFunction;
    private javax.swing.JButton btnGenerateKMap;
    private javax.swing.JButton btnGenerateTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButton rbtnFiveVariablesFunction;
    private javax.swing.JRadioButton rbtnFiveVariablesKMap;
    private javax.swing.JRadioButton rbtnFiveVariablesTable;
    private javax.swing.JRadioButton rbtnFourVariablesFunction;
    private javax.swing.JRadioButton rbtnFourVariablesKMap;
    private javax.swing.JRadioButton rbtnFourVariablesTable;
    private javax.swing.JRadioButton rbtnMaxTerms;
    private javax.swing.JRadioButton rbtnMinTerms;
    private javax.swing.JRadioButton rbtnThreeVariablesFunction;
    private javax.swing.JRadioButton rbtnThreeVariablesKMap;
    private javax.swing.JRadioButton rbtnThreeVariablesTable;
    private javax.swing.JRadioButton rbtnTwoVariablesFunction;
    private javax.swing.JRadioButton rbtnTwoVariablesKMap;
    private javax.swing.JRadioButton rbtnTwoVariablesTable;
    private javax.swing.JTable tableKMap1;
    private javax.swing.JTable tableKMap2;
    private javax.swing.JTable tableTruthTable;
    private javax.swing.JTextField tfFunction;
    private javax.swing.JTextField tfSimplifiedFunction;
    // End of variables declaration//GEN-END:variables
}
